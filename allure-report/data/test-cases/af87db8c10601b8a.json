{
  "uid" : "af87db8c10601b8a",
  "name" : "test_add",
  "fullName" : "src.a_pytest.b_sequence.test_case.TestClass#test_add",
  "historyId" : "74f59845f0ee31bcdde039c10c0f1bdc",
  "time" : {
    "start" : 1578630425891,
    "stop" : 1578630425891,
    "duration" : 0
  },
  "status" : "failed",
  "statusMessage" : "AssertionError: assert 15 == 16\n +  where 15 = <function Calc.add at 0x0000029E1E61AE50>(1, 2, 12)\n +    where <function Calc.add at 0x0000029E1E61AE50> = <src.a_pytest.b_sequence.Calc.Calc object at 0x0000029E1E8B9A30>.add\n +      where <src.a_pytest.b_sequence.Calc.Calc object at 0x0000029E1E8B9A30> = <src.a_pytest.b_sequence.test_case.TestClass object at 0x0000029E1E8A9D30>.c",
  "statusTrace" : "self = <src.a_pytest.b_sequence.test_case.TestClass object at 0x0000029E1E8A9D30>\n\n    def test_add(self):\n>       assert self.c.add(1, 2, 12) == 16\nE       assert 15 == 16\nE        +  where 15 = <function Calc.add at 0x0000029E1E61AE50>(1, 2, 12)\nE        +    where <function Calc.add at 0x0000029E1E61AE50> = <src.a_pytest.b_sequence.Calc.Calc object at 0x0000029E1E8B9A30>.add\nE        +      where <src.a_pytest.b_sequence.Calc.Calc object at 0x0000029E1E8B9A30> = <src.a_pytest.b_sequence.test_case.TestClass object at 0x0000029E1E8A9D30>.c\n\nsrc\\a_pytest\\b_sequence\\test_case.py:19: AssertionError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "_Class__pytest_setup_class",
    "time" : {
      "start" : 1578630425890,
      "stop" : 1578630425890,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "hasContent" : false,
    "stepsCount" : 0,
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0
  } ],
  "testStage" : {
    "status" : "failed",
    "statusMessage" : "AssertionError: assert 15 == 16\n +  where 15 = <function Calc.add at 0x0000029E1E61AE50>(1, 2, 12)\n +    where <function Calc.add at 0x0000029E1E61AE50> = <src.a_pytest.b_sequence.Calc.Calc object at 0x0000029E1E8B9A30>.add\n +      where <src.a_pytest.b_sequence.Calc.Calc object at 0x0000029E1E8B9A30> = <src.a_pytest.b_sequence.test_case.TestClass object at 0x0000029E1E8A9D30>.c",
    "statusTrace" : "self = <src.a_pytest.b_sequence.test_case.TestClass object at 0x0000029E1E8A9D30>\n\n    def test_add(self):\n>       assert self.c.add(1, 2, 12) == 16\nE       assert 15 == 16\nE        +  where 15 = <function Calc.add at 0x0000029E1E61AE50>(1, 2, 12)\nE        +    where <function Calc.add at 0x0000029E1E61AE50> = <src.a_pytest.b_sequence.Calc.Calc object at 0x0000029E1E8B9A30>.add\nE        +      where <src.a_pytest.b_sequence.Calc.Calc object at 0x0000029E1E8B9A30> = <src.a_pytest.b_sequence.test_case.TestClass object at 0x0000029E1E8A9D30>.c\n\nsrc\\a_pytest\\b_sequence\\test_case.py:19: AssertionError",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "dcc1c96bba6c5868",
      "name" : "stdout",
      "source" : "dcc1c96bba6c5868.txt",
      "type" : "text/plain",
      "size" : 43
    } ],
    "parameters" : [ ],
    "hasContent" : true,
    "stepsCount" : 0,
    "shouldDisplayMessage" : true,
    "attachmentsCount" : 1
  },
  "afterStages" : [ {
    "name" : "_Class__pytest_setup_class::0",
    "time" : {
      "start" : 1578630425957,
      "stop" : 1578630425957,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "hasContent" : false,
    "stepsCount" : 0,
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0
  } ],
  "labels" : [ {
    "name" : "parentSuite",
    "value" : "src.a_pytest.b_sequence"
  }, {
    "name" : "suite",
    "value" : "test_case"
  }, {
    "name" : "subSuite",
    "value" : "TestClass"
  }, {
    "name" : "host",
    "value" : "GELOMEN-PC"
  }, {
    "name" : "thread",
    "value" : "9476-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "src.a_pytest.b_sequence.test_case"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ {
      "uid" : "fe68fe739ba0cc15",
      "status" : "failed",
      "statusDetails" : "AssertionError: assert 15 == 16\n +  where 15 = <function Calc.add at 0x000001C503E66790>(1, 2, 12)\n +    where <function Calc.add at 0x000001C503E66790> = <src.a_pytest.b_sequence.Calc.Calc object at 0x000001C5041056A0>.add\n +      where <src.a_pytest.b_sequence.Calc.Calc object at 0x000001C5041056A0> = <src.a_pytest.b_sequence.test_case.TestClass object at 0x000001C504105670>.c",
      "time" : {
        "start" : 1578629214747,
        "stop" : 1578629214747,
        "duration" : 0
      }
    } ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 2,
        "broken" : 0,
        "skipped" : 0,
        "passed" : 0,
        "unknown" : 0,
        "total" : 2
      },
      "items" : [ {
        "uid" : "85fad7e1cf0dc10d",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert 15 == 16\n +  where 15 = <function Calc.add at 0x0000029E1E61AE50>(1, 2, 12)\n +    where <function Calc.add at 0x0000029E1E61AE50> = <src.a_pytest.b_sequence.Calc.Calc object at 0x0000029E1E8B9A30>.add\n +      where <src.a_pytest.b_sequence.Calc.Calc object at 0x0000029E1E8B9A30> = <src.a_pytest.b_sequence.test_case.TestClass object at 0x0000029E1E8A9D30>.c",
        "time" : {
          "start" : 1578630425891,
          "stop" : 1578630425891,
          "duration" : 0
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "af87db8c10601b8a.json",
  "parameterValues" : [ ]
}